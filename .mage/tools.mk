mage_folder := $(abspath $(dir $(lastword $(MAKEFILE_LIST))))
mage_generated_path := $(mage_folder)/tools/mgmake
mage_tools_path := $(mage_folder)/tools
mage_targets_file := $(mage_generated_path)/targets.mk
mage := $(mage_generated_path)/local-mage
mgmake := $(mage_folder)/mgmake_gen.go
mgmain := $(mage_folder)/mgmain_gen.go

define mgmake_content
// Code generated by Mage-tools. DO NOT EDIT.
//go:build mage
// +build mage

package main

// mage:import
import _ "go.einride.tech/mage-tools/mgmake"
endef

define mgmain_content
// Code generated by Mage-tools. DO NOT EDIT.
//go:build ignore
// +build ignore

package main

import (
	"os"
	"github.com/magefile/mage/mage"
)

func main() { os.Exit(mage.Main()) }
endef

include $(mage_targets_file)

$(mage_targets_file): $(mage_folder)/go.mod $(shell find $(mage_folder)/.. -type f -name '*.go')
	@git clean -fdx $(mage_generated_path)
	@mkdir -p $(mage_generated_path)
	$(file > $(mgmake),$(mgmake_content))
	$(file > $(mgmain),$(mgmain_content))
	@cd $(mage_folder) && \
		go mod tidy && \
		go run $(notdir $(mgmain)) -compile $(mage) && \
		$(mage) generateMakefile $(@)

.PHONY: mage-clean
mage-clean:
	@git clean -fdx $(mage_generated_path) $(mage_tools_path)
